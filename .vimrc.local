" Easily go to start of line
nmap 0 ^

" Show vimrc and vimrc.local
nmap <leader>vr :sp $MYVIMRC<cr>
nmap <leader>lvr :sp ~/.vimrc.local<cr>
nmap <leader>so :source ~/.vimrc.local<cr>:source $MYVIMRC<cr>

" Escape insert mode
imap jk <esc>:w<cr>
imap kj <esc>:w<cr>
imap jj <esc><cr>

" bind \ (backward slash) to grep shortcut
command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!
nnoremap \ :Ag<SPACE>

" bind K to grep word under cursor
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" open scratchpads
command Jsscratch vsplit ~/dev/scratchpad.js
command Scratch vsplit ~/dev/scratchpad.md

" Pre-populate a split command with the current directory
nmap <leader>v :vnew <C-r>=escape(expand("%:p:h"), ' ') . '/'<cr>

" Move up and down by visible lines if current line is wrapped
nmap j gj
nmap k gk

" Command aliases for typoed commands (accidentally holding shift too long)
command! Q q " Bind :Q to :q
command! Qall qall
command! QA qall
command! E e

" Paste and use current level of indentation (where cursor currently is)
map <leader>p :set paste<CR>o<esc>"*]p:set nopaste<cr>

" Relative number with absolute line number on current line
set number
set relativenumber

" automatically rebalance windows on vim resize
autocmd VimResized * :wincmd =

" zoom a vim split, <C-w>= to rebalance
nnoremap <leader>- :wincmd _<cr>:wincmd \|<cr>
nnoremap <leader>= :wincmd =<cr>

nnoremap <leader>irb :VtrOpenRunner {'orientation': 'h', 'percentage': 50, 'cmd': 'irb'}<cr>

" Make current split large and make others smaller
set winwidth=84
set winheight=5
set winminheight=5
set winheight=999
nnoremap <leader>pry :VtrOpenRunner {'orientation': 'h', 'percentage': 50, 'cmd': 'pry'}<cr>

" Go to the end of the line and append
nnoremap <leader>a $a

" Highlight search results
set hlsearch
" Clear highlighted search results
nmap <leader>h :nohlsearch<cr>
" Overide ignorecase if pattern contains uppercase characters
set smartcase

" Highlight spelling mistakes in a more readable background color
hi SpellBad ctermbg=1

" Allows OS X to access clipboard
set clipboard=unnamed

" Settings for vim-textobj-rubyblock
if has("autocmd")
  filetype indent plugin on
endif

" Explore current file's directory
nmap <leader>o :Explore<cr>
" Open current file's directory in new split
nmap <leader>os :Sexplore<cr>
" Open current file's directory in new vertical split
nmap <leader>ov :Vexplore<cr>

" Change ColorColumn to dark gray
hi ColorColumn ctermbg=8

" Pretty print JSON (requires 'elzr/vim-json' and 'jq')
function! s:PrettyJSON()
  %!jq .
  set filetype=json
endfunction
command! PrettyJSON :call <sid>PrettyJSON()
